@page "/counter"
@using System.Collections.Frozen
@using Nertz.Application.Contracts
@using Nertz.Application.Nertz
@using Nertz.Application.Players
@rendermode InteractiveServer
@inject INertz nertzApp

<PageTitle>Counter</PageTitle>

<h1>Counter</h1>

<p role="status">Current count: @currentCount</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>
@if (game is null)
{
    <button class="btn btn-warning" @onclick="SetupGame">Create Game</button>
}
else
{
    <button class="btn btn-warning" @onclick="StartNewRound">Start New Round</button>
}

@if (!string.IsNullOrEmpty(gameInitErrorMessage))
{
    <p>@gameInitErrorMessage</p>
}
@if (!string.IsNullOrEmpty(roundInitErrorMessage))
{
    <p>@roundInitErrorMessage</p>
}

@if (game is not null)
{
    <span>Overall Scores</span>
    <ol>
        @foreach(var playerScore in game.Scores)
        {
            <li>@playerScore.Key: @playerScore.Value</li>
        }
    </ol>
}

@if (currentRound is not null)
{
    <span>Current Round: @currentRound.RoundNumber</span>
    <span>Round Scores</span>
    <ol>
        @foreach (var playerRoundScore in currentRound.PlayerScores)
        {
            <li>@playerRoundScore.Key: @playerRoundScore.Value</li>
        }
    </ol>
}

@code {
    private int currentCount = 0;
    private string gameInitErrorMessage = string.Empty;
    private string roundInitErrorMessage = string.Empty;
    private Game? game = null;
    private GameRound? currentRound = null;

    private void IncrementCount()
    {
        currentCount++;
    }

    private void SetupGame()
    {

        var playerIds = Enumerable
            .Range(0, 3)
            .Select((_) => Guid.NewGuid());
        
        var gameSetupResult = nertzApp.SetupGame(100, 3, playerIds);

        if (gameSetupResult.IsError)
        {
            gameInitErrorMessage = gameSetupResult.FirstError.Description;
        }
        else
        {
            game = gameSetupResult.Value;
        }
    }

    private void StartNewRound()
    {
        var newRoundResult= game.StartNewRound();

        if (newRoundResult.IsError)
        {
            roundInitErrorMessage = string.Join(". ", newRoundResult.Errors.Select(err => err.Description));
        }
        else
        {
            currentRound = newRoundResult.Value;
        }
    }
}
